#######################################字符串##############################################
#1、字符串默认不使用引号表示
str1: 这是一个字符串

#2、如果字符串之中包含空格或特殊字符，需要放在引号之中。
str2: '内容： *字符串'

#3、单引号和双引号都可以使用，双引号不会对特殊字符转义。
str3: '内容\n字符串'
str4: "content\n string"

#4、单引号之中如果还有单引号，必须连续使用两个单引号转义。
s3: 'labor''s day'

#5、字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格
strline: 这是一段
  多行
  字符串

#6、多行字符串可以使用|保留换行符，也可以使用>折叠换行
this: |
  Foo
  Bar
that: >
  Foo
  Bar

#7、+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。
s4: |
  Foo4
s5: |+
  Foo5
s6: |-
  Foo6
s7: |
  Foo7


###################################对象####################
#1、对象的一组键值对，使用冒号结构表示。
animal: pets  #{'animal': 'pets'}
#
##2、Yaml 也允许另一种写法，将所有键值对写成一个行内对象
dict1: { name: Steve, foo: bar } #{'dict1': {'foo': 'bar', 'name': 'Steve'}}


####################################数组###################

# 1、数组可以采用行内表示法。
animal2: [Cat, Dog]

#{'animal': ['Cat', 'Dog']}

#2、一组连词线开头的行，构成一个数组。
animal1:
 - Cat
 - Dog
 - Goldfish

# {'animal1': ['Cat', 'Dog', 'Goldfish']}



############################复合结构##########################
#对象和数组可以结合使用，形成复合结构

languages1:
 - Ruby
 - Perl
 - Python
websites1:
 YAML: yaml.org
 Ruby: ruby-lang.org
 Python: python.org
 Perl: use.perl.org
#{'languages1': ['Ruby', 'Perl', 'Python'], 'websites1': {'Python': 'python.org', 'YAML': 'yaml.org', 'Ruby': 'ruby-lang.org', 'Perl': 'use.perl.org'}}

db1:
    host: xxx
    port: 3306
    user: weibospider
    password: xxx
    db_name: weibo
    db_type: mysql

#{'db1': {'host': 'xxx', 'db_name': 'weibo', 'user': 'weibospider', 'db_type': 'mysql', 'password': 'xxx', 'port': 3306}}



############################复合结构##########################
#对象和数组可以结合使用，形成复合结构

languages:
 - Ruby
 - Perl
 - Python
websites:
 YAML: yaml.org
 Ruby: ruby-lang.org
 Python: python.org
 Perl: use.perl.org
#{'languages': ['Ruby', 'Perl', 'Python'], 'websites': {'Python': 'python.org', 'YAML': 'yaml.org', 'Ruby': 'ruby-lang.org', 'Perl': 'use.perl.org'}}

db:
    host: xxx
    port: 3306
    user: weibospider
    password: xxx
    db_name: weibo
    db_type: mysql

#{'db': {'host': 'xxx', 'db_name': 'weibo', 'user': 'weibospider', 'db_type': 'mysql', 'password': 'xxx', 'port': 3306}}